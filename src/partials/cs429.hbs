<div class = "cs429">
<br></br>
<p>CS429 (Computer Architecture) Projects:</p>
<p></p>
<p>Data Lab (Lab 1):</p>
<p></p>
<p>The goal of Datalab was to learn about bit manipulations with C. There are a total of 14 puzzles. Below are my results:</p>
<div style="text-align:center"><p> <img src = "lab1.jpg" width = "440" height = "300"></p></div>
<p>I managed to outperform the professor's results and ended up with second on the class scoreboard for the assignment.</p>
<p></p>
<p>Bomb Lab (Lab 2):</p>
<p>A very fun lab! We received a binary bomb and we were told to find inputs that would not cause the bomb to 'explode'.
We had to dissassemble the bomb using gdb and then proceed to look for anything in the disassembled x86 file to look
for any important things that could defuse the bomb. The first phase of the bomb lab was a simple method that compared
the input string with a string stored within a memory address. All you had to do was look at what was stored in that
memory address using x/x and then piece together the characters to find the input string.</p>
<p></p>
<p>Calculator Lab (Lab 3)</p>
<p></p>
<p>In this lab, we had to create a C program that would produce x86 assembly using printf statements that would take in
an RPN expression (Reverse Polish Notation) and print the result. We were required to implement 4 expressions: adding, subtracting, unary minus, and multiplication. </p>
<p></p>
<p>Attack Lab (Lab 4)</p>
<p></p>
<p>In this lab, we had to investigate Buffer Overflow bugs, and had to inject raw code (bits and bytes) into an x86 assembly file to get a desired output from the code.</p>
<p></p>
<p></p>
<p>Arch Lab (Lab 5)</p>
<p></p>
<p>In this lab, we had to increase the performance of a pipelined processor. The main part of this lab focused on optimizing a method written in Y86 using
various optimization techniques we learned in class such as loop unrolling, and moving our data to registers in order to avoid RAW (read after write)
data hazards, various other data hazards, and control hazards.</p>
<p></p>
<p></p>
<p>Cache Lab (Lab 6)</p>
<p></p>
<p>In this lab, we had to create a cache simulator that would perform reads and writes properly, evicting the proper data from the set and counting the number of hits and misses</p>
<p></p>
</div>
